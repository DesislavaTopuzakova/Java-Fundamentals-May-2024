[] - показват, че искаме да имаме един символ
[a-z] - искаме да вземем единичен символ, който е между a-z
[A-Z] - искаме да вземем единичен символ, който е между A-Z
[a-z]+ - искаме да вземе една или повече малки букви
[A-Z]+ - искаме да вземе една или повече главни букви
[0-9] - вземаме една цифра

Quantity modifiers:
+ -> дава ни съвпадение един или повече пъти
* -> елементът можем да го срещнем 0 или повече пъти
? -> елементът можем да го срещнем 0 или един път

[a-z]{3} -> искаме да получим точно 3 малки букви -> {3} - колко точно елемента искаме 

[abc]+ - искаме да получим комбинация от 3-те символа без значение как са подредени 
		-> aaaaa, abc, acb, a, b, c, ccccc, bbbbb, 
		
[^abc] -> искаме да вземем всички символи с изключение на тези в скобите 

\w - дава ни резултат, който е word character (a-z, A-Z, 0-9, _)
\W - дава ни резултат, който е  non-word character (the opposite of \w)
\s - дава ни резултат white-space 
\S - дава ни резултат non-white-space (opposite of \s) - различен
\d - дава ни резултат, който число в интервала (0-9)
\D - дава ни резултат, който е различен от интервала (0-9) (the opposite of \d)

{число} - колко пъти да среща даденият елемент 
{число,} - минимум колко пъти искаме да срещаме даденият елемент
{число1,число2} - минимум срещания -> число1, максимум срещания число2

() -> създаваме група 
(?<groupName>) -> създаваме група с конкретно име 
		-> най-отпред пишем ? след това <> вътре в диамантените скоби пишем името на групата.
		

"\+359([- ])2\1([_])\d{3}\1\2\d{3}"
	back traking, когато искаме да имаме един и същ разделител между елементите
	-> групираме възможните разделители и след това реферираме към групата
	
	+359 2 _104 _590 
	

\b -> използваме, за да сложим граници
	
	
	
	
	












